AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - "AWS::Serverless-2016-10-31"
Description: "Serverless API with catch-all routing, DynamoDB cache, and fast builds"

Parameters:
  AllowedOrigin:
    Type: "String"
    Default: "*"
    Description: "CORS origin for responses (use your site origin in prod)"
  YtKeySecretArn:
    Type: "String"
    Description: "ARN of the Secrets Manager secret that contains key 'YT_API_KEY'"

Globals:
  Function:
    Runtime: "nodejs22.x"
    Timeout: 20
    MemorySize: 256
    Tracing: "Active"
  Api:
    TracingEnabled: true

Resources:
  # ---------- HTTP API ----------
  HttpApi:
    Type: "AWS::Serverless::HttpApi"
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - !Ref AllowedOrigin
        AllowHeaders:
          - "Content-Type"
          - "Authorization"
        AllowMethods:
          - "GET"
          - "POST"
          - "OPTIONS"

  # ---------- DynamoDB Cache ----------
  CacheTable:
    Type: "AWS::Serverless::SimpleTable"
    Properties:
      TableName: !Sub "${AWS::StackName}-cache"
      PrimaryKey:
        Name: "pk"
        Type: "S"
      Tags:
        App: "serverless-api"

  # ---------- Lambda (route-agnostic) ----------
  ProxyFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: "server"
      Handler: "src/index.handler"
      Environment:
        Variables:
          TABLE_NAME: !Ref CacheTable
          ALLOWED_ORIGIN: !Ref AllowedOrigin
          ENABLE_ORIGIN_CHECK: "false"
          # Pull YT API key at runtime via dynamic reference into YT_KEY
          YT_KEY: !Sub "{{resolve:secretsmanager:${YtKeySecretArn}:SecretString:YT_API_KEY}}"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - Statement:
            Effect: "Allow"
            Action:
              - "secretsmanager:GetSecretValue"
            Resource: !Ref YtKeySecretArn
      Events:
        # Single catch-all: your handler decides what to do based on path/method
        ProxyAny:
          Type: "HttpApi"
          Properties:
            ApiId: !Ref HttpApi
            Path: "/{proxy+}"
            Method: "ANY"
        # Optional: mount root without needing /{proxy+}
        RootAny:
          Type: "HttpApi"
          Properties:
            ApiId: !Ref HttpApi
            Path: "/"
            Method: "ANY"
    Metadata:
      BuildMethod: "esbuild"
      BuildProperties:
        EntryPoints:
          - "src/index.js"
        Minify: true
        Target: "node22"
        Sourcemap: false
        External:
          - "@aws-sdk/*"

Outputs:
  ApiUrl:
    Description: "HTTP API base URL"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
  TableName:
    Description: "DynamoDB cache table name"
    Value: !Ref CacheTable
